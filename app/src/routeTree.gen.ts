/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WatchIndexImport } from './routes/watch/index'
import { Route as ShowTvIdIndexImport } from './routes/show/tv/$id/index'
import { Route as ShowTvIdSeasonSeasonNumberImport } from './routes/show/tv/$id/season/$seasonNumber'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const ErrorIndexLazyImport = createFileRoute('/error/')()
const AuthLoginLazyImport = createFileRoute('/auth/login')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ErrorIndexLazyRoute = ErrorIndexLazyImport.update({
  id: '/error/',
  path: '/error/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/error/index.lazy').then((d) => d.Route))

const WatchIndexRoute = WatchIndexImport.update({
  id: '/watch/',
  path: '/watch/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))

const ShowTvIdIndexRoute = ShowTvIdIndexImport.update({
  id: '/show/tv/$id/',
  path: '/show/tv/$id/',
  getParentRoute: () => rootRoute,
} as any)

const ShowTvIdSeasonSeasonNumberRoute = ShowTvIdSeasonSeasonNumberImport.update(
  {
    id: '/show/tv/$id/season/$seasonNumber',
    path: '/show/tv/$id/season/$seasonNumber',
    getParentRoute: () => rootRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/watch/': {
      id: '/watch/'
      path: '/watch'
      fullPath: '/watch'
      preLoaderRoute: typeof WatchIndexImport
      parentRoute: typeof rootRoute
    }
    '/error/': {
      id: '/error/'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/show/tv/$id/': {
      id: '/show/tv/$id/'
      path: '/show/tv/$id'
      fullPath: '/show/tv/$id'
      preLoaderRoute: typeof ShowTvIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/show/tv/$id/season/$seasonNumber': {
      id: '/show/tv/$id/season/$seasonNumber'
      path: '/show/tv/$id/season/$seasonNumber'
      fullPath: '/show/tv/$id/season/$seasonNumber'
      preLoaderRoute: typeof ShowTvIdSeasonSeasonNumberImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/watch': typeof WatchIndexRoute
  '/error': typeof ErrorIndexLazyRoute
  '/show/tv/$id': typeof ShowTvIdIndexRoute
  '/show/tv/$id/season/$seasonNumber': typeof ShowTvIdSeasonSeasonNumberRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/watch': typeof WatchIndexRoute
  '/error': typeof ErrorIndexLazyRoute
  '/show/tv/$id': typeof ShowTvIdIndexRoute
  '/show/tv/$id/season/$seasonNumber': typeof ShowTvIdSeasonSeasonNumberRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/auth/login': typeof AuthLoginLazyRoute
  '/watch/': typeof WatchIndexRoute
  '/error/': typeof ErrorIndexLazyRoute
  '/show/tv/$id/': typeof ShowTvIdIndexRoute
  '/show/tv/$id/season/$seasonNumber': typeof ShowTvIdSeasonSeasonNumberRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/watch'
    | '/error'
    | '/show/tv/$id'
    | '/show/tv/$id/season/$seasonNumber'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/watch'
    | '/error'
    | '/show/tv/$id'
    | '/show/tv/$id/season/$seasonNumber'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/watch/'
    | '/error/'
    | '/show/tv/$id/'
    | '/show/tv/$id/season/$seasonNumber'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
  WatchIndexRoute: typeof WatchIndexRoute
  ErrorIndexLazyRoute: typeof ErrorIndexLazyRoute
  ShowTvIdIndexRoute: typeof ShowTvIdIndexRoute
  ShowTvIdSeasonSeasonNumberRoute: typeof ShowTvIdSeasonSeasonNumberRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthLoginLazyRoute: AuthLoginLazyRoute,
  WatchIndexRoute: WatchIndexRoute,
  ErrorIndexLazyRoute: ErrorIndexLazyRoute,
  ShowTvIdIndexRoute: ShowTvIdIndexRoute,
  ShowTvIdSeasonSeasonNumberRoute: ShowTvIdSeasonSeasonNumberRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/login",
        "/watch/",
        "/error/",
        "/show/tv/$id/",
        "/show/tv/$id/season/$seasonNumber"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.lazy.tsx"
    },
    "/watch/": {
      "filePath": "watch/index.tsx"
    },
    "/error/": {
      "filePath": "error/index.lazy.tsx"
    },
    "/show/tv/$id/": {
      "filePath": "show/tv/$id/index.tsx"
    },
    "/show/tv/$id/season/$seasonNumber": {
      "filePath": "show/tv/$id/season/$seasonNumber.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
